{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoAPP\\\\src\\\\forms\\\\EditUserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTodo } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserForm = props => {\n  _s();\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]);\n  const dispatch = useDispatch();\n  const [user, setUser] = useState(props.currentUser);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.target;\n    setUser({ ...user,\n      name: value\n    });\n  };\n\n  const handleSubmit = e => {\n    dispatch(editTodo(user));\n    props.updateUser();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"u-full-width\",\n      type: \"text\",\n      value: user.name,\n      name: \"name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-primary\",\n      onClick: handleSubmit,\n      children: \"Update user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => props.setEditing(false),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditUserForm, \"FX3O8utqwy+q05MQjk+7i+7gtFE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditUserForm;\nexport default EditUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserForm\");","map":{"version":3,"sources":["D:/TodoAPP/src/forms/EditUserForm.js"],"names":["React","useState","useEffect","useDispatch","editTodo","EditUserForm","props","setUser","currentUser","dispatch","user","handleChange","e","value","target","name","handleSubmit","updateUser","setEditing"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5BJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACD,KAAK,CAACE,WAAP,CAAP;AACH,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,IAAD,EAAOH,OAAP,IAAkBN,QAAQ,CAACK,KAAK,CAACE,WAAP,CAAhC;;AAEA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA;AAAD,QAAUD,CAAC,CAACE,MAAlB;AACAP,IAAAA,OAAO,CAAC,EAAC,GAAGG,IAAJ;AAASK,MAAAA,IAAI,EAAEF;AAAf,KAAD,CAAP;AACC,GAHL;;AAKA,QAAMG,YAAY,GAAGJ,CAAC,IAAI;AACtBH,IAAAA,QAAQ,CAACL,QAAQ,CAACM,IAAD,CAAT,CAAR;AACAJ,IAAAA,KAAK,CAACW,UAAN;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,KAAK,EAAEP,IAAI,CAACK,IAAxD;AAA8D,MAAA,IAAI,EAAC,MAAnE;AAA0E,MAAA,QAAQ,EAAEJ;AAApF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEK,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMV,KAAK,CAACY,UAAN,CAAiB,KAAjB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5BD;;GAAMb,Y;UAMeF,W;;;KANfE,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTodo } from '../store/actions';\n\nconst EditUserForm = (props) => {\n\n    useEffect(() => {\n        setUser(props.currentUser)\n    }, [props]);\n\n    const dispatch = useDispatch()\n\n    const [user, setUser] = useState(props.currentUser);\n\n    const handleChange = e => {\n        const {value} = e.target;\n        setUser({...user,name: value});\n        }\n\n    const handleSubmit = e => {\n        dispatch(editTodo(user));\n        props.updateUser()\n    }\n\n    return (\n        <form>\n            <label>Name</label>\n            <input className=\"u-full-width\" type=\"text\" value={user.name} name=\"name\" onChange={handleChange} />\n            <button className=\"button-primary\" onClick={handleSubmit} >Update user</button>\n            <button type=\"submit\" onClick={() => props.setEditing(false)} >Cancel</button>\n        </form>\n    )\n}\n\nexport default EditUserForm;"]},"metadata":{},"sourceType":"module"}